name: Release

# allow only one "Release" workflow to run at a time
concurrency: production

on:
  push:
    branches: [alpha, beta, rc, master]

jobs:
  release:
    # this should match the os version used by the "check bundle size" step in
    # pr.yml
    runs-on: ubuntu-20.04
    outputs:
      TAG: ${{ steps.set_tag_output.outputs.TAG }}
      VERSION: ${{ steps.set_version_output.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # we need all commit history so we can merge master into develop
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          # use node 14 until we can evaluate using npm 7+ and lock file version 2
          # this should match the node version used by the "check bundle size"
          # step in pr.yml
          node-version: 14

      - name: Set TAG
        run: |
          echo "TAG=alpha" >> $GITHUB_ENV

      - id: set_tag_output
        run: echo "::set-output name=TAG::${TAG}"

      - name: Set VERSION
        run: |
          echo "VERSION=7.4.2-alpha.2" >> $GITHUB_ENV

      - id: set_version_output
        run: echo "::set-output name=VERSION::${VERSION}"

  publish-docker:
    needs: release
    runs-on: ubuntu-20.04
    steps:
      # because the docker publish action is an action we made, we have to
      # check out the repo
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Ganache's docker publish action
        # we are running our local action, so point directly to a folder
        # containing an `action.yml` file
        uses: ./.github/actions/docker-publish
        with:
          VERSION: ${{ needs.release.outputs.VERSION }}
          TAG: ${{ needs.release.outputs.TAG }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          INFURA_KEY: ${{ secrets.INFURA_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
